---
- name: Install apm-server
  hosts: apm-server
  become: true
  vars:
    haproxy_ssl: false

  vars_files:
    - vars/variables.yml

  environment: "{{ deployment_environment_variables | default({}) }}"

  pre_tasks:
    - include_tasks: common_task_data_node_hosts.yml
      tags:
        - always

  tasks:
    - include_tasks: common_task_install_elk_repo.yml

    - name: Ensure apm-server is installed
      apt:
        name: "{{ item }}"
        state: "{{ elk_package_state | default('present') }}"
        update_cache: true
      with_items:
        - apm-server
      register: _apt_task
      until: _apt_task is success
      retries: 3
      delay: 2
      notify:
        - Enable and restart apm server
      tags:
        - package_install

    - name: exit playbook after uninstall
      meta: end_play
      when:
        - (elk_package_state | default('present')) == 'absent'

  post_tasks:
    - name: Create apm-server systemd service config dir
      file:
        path: "/etc/systemd/system/apm-server.service.d"
        state: "directory"
        group: "root"
        owner: "root"
        mode: "0755"

    - name: Apply systemd options
      template:
        src: "{{ item.src }}"
        dest: "/etc/systemd/system/apm-server.service.d/{{ item.dest }}"
        mode: "0644"
      with_items:
        - { src: "systemd.general-overrides.conf.j2", dest: "apm-server-overrides.conf" }
      notify:
        - Enable and restart apm server

    - name: Drop apm-server conf file
      template:
        src: templates/apm-server.yml.j2
        dest: /etc/apm-server/apm-server.yml
      notify:
        - Enable and restart apm server

  handlers:
    - name: Enable and restart apm server
      systemd:
        name: "apm-server"
        enabled: true
        state: restarted
        daemon_reload: true
      when:
        - (elk_package_state | default('present')) != 'absent'
      tags:
        - config

  tags:
    - server-install

- import_playbook: setupAPMserver.yml
